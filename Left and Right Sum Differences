[PROBLEM] : Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:
    answer.length == nums.length.
    answer[i] = |leftSum[i] - rightSum[i]|.
    Where:
        leftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.
        rightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0.
Return the array answer.

Input: nums = [10,4,8,3]
Output: [15,1,11,22]

Explanation:
    The array leftSum is [0,10,14,22] and the array rightSum is [15,11,3,0].The array answer is [|0 - 15|,|10 - 11|,|14 - 3|,|22 - 0|] = [15,1,11,22].

SOLUTION [JAVA] : 

import java.util.*;
class HelloWorld {
    public int[] leftRigthDifference(int[] nums) 
    {
        int x=0;
        int arr[]=new int[nums.length];
        for(int i=0;i<nums.length;i++)
        {
            int sum1=0,sum2=0;
            
            for(int k=i;k>=0;k--)
            sum1+=nums[k];
            for(int k=i;k<nums.length;k++)
            sum2+=nums[k];
            int diff=sum1>sum2?sum1-sum2:sum2-sum1;
            arr[x]=diff;
            x++;
        }    
        return arr;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("size of array");
        int size1=sc.nextInt();
        System.out.println("enter array values");
        int[] arr1=new int[size];
        for(int i=0;i<size;i++)
        {
            arr1[i]=sc.nextInt();
        }
        for(int i=0;i<arr1.length;i++)
        System.out.println(leftRigthDifference(arr1));
    }
}
