[PROBLEM] : A string is good if there are no repeated characters.
Given a string s, return the number of good substrings of length three in s.
Note that if there are multiple occurrences of the same substring, every occurrence should be counted.
A substring is a contiguous sequence of characters in a string.

Input: s = "xyzzaz"
Output: 1
Explanation: There are 4 substrings of size 3: "xyz", "yzz", "zza", and "zaz". 
The only good substring of length 3 is "xyz".

SOLUTION [JAVA] : 

import java.util.*;
class HelloWorld {
    public int countGoodSubstrings(String s) 
    {
        char[] arr1=s.toCharArray();
        int count=0;
        for(int i=0;i<s.length()-2;i++)
        {
            char aa=arr1[i];
            char bb=arr1[i+1];
            char cc=arr1[i+2];
            if((aa!=bb)&&(aa!=cc)&&(bb!=cc))
            count++;
        }    
        return count;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
        int ans=countPairs(str);
        System.out.println(ans);
    }
}
