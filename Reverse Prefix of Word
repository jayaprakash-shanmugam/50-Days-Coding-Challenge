[PROBLEM] : Given a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch (inclusive). If the character ch does not exist in word, do nothing.

For example, if word = "abcdefd" and ch = "d", then you should reverse the segment that starts at 0 and ends at 3 (inclusive). The resulting string will be "dcbaefd".
Return the resulting string.

Input: word = "abcdefd", ch = "d"
Output: "dcbaefd"
Explanation: The first occurrence of "d" is at index 3. 
Reverse the part of word from 0 to 3 (inclusive), the resulting string is "dcbaefd".

SOLUTION [JAVA] : 

import java.util.*;
class HelloWorld {
    public String reversePrefix(String word, char ch) 
    {
        char[] arr1=word.toCharArray();
        int j=0,k=arr1.length;
        for(int i=0;i<arr1.length;i++)
        {
            if(arr1[i]==ch)
            break;
            else
            j++;
            
        }
        if(j==k)
        {
            String ans=new String(arr1);
            return ans;
        }
        
        char arr2[]=new char[k];
        for(int i=0;i<k;i++)
        {
            arr2[i]=arr1[i];
        }
        for(int i=0;i<j;i++)
        {
            char temp=arr2[i];
            arr2[i]=arr2[j];
            arr2[j]=temp;
            j--;
            if(j==-1)
            break;
        }
        String str=new String(arr2);
        return str;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("string");
        String str=sc.nextLine();
        System.out.println("char");
        Char a=sc.next();
        System.out.println(reversePrefix(str,a));
    }
}
